<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
                   xmlns:pro="http://www.liquibase.org/xml/ns/pro"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog dbchangelog.xsd
    http://www.liquibase.org/xml/ns/dbchangelog-ext dbchangelog.xsd
    http://www.liquibase.org/xml/ns/pro dbchangelog.xsd" >
    <changeSet author="Sheldan" id="faq_command_alias-table">
        <createTable tableName="faq_command_alias">
            <column name="command_id" type="BIGINT">
                <constraints nullable="false" />
            </column>
            <column name="alias" type="VARCHAR(30)">
                <constraints nullable="true"/>
            </column>
            <column name="created" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <createIndex indexName="idx_faq_command_alias_name" tableName="faq_command_alias">
            <column name="alias"/>
        </createIndex>
        <addPrimaryKey tableName="faq_command_alias" columnNames="command_id, alias" constraintName="pk_faq_command_alias"/>

        <addForeignKeyConstraint baseColumnNames="command_id" baseTableName="faq_command_alias" constraintName="faq_command_alias_command"
                                 deferrable="false" initiallyDeferred="false" onDelete="NO ACTION" onUpdate="NO ACTION" referencedColumnNames="id"
                                 referencedTableName="faq_command" validate="true"/>
        <sql>
            DROP TRIGGER IF EXISTS faq_command_update_trigger ON faq_command;
            CREATE TRIGGER faq_command_update_trigger BEFORE UPDATE ON faq_command FOR EACH ROW EXECUTE PROCEDURE update_trigger_procedure();
        </sql>
        <sql>
            DROP TRIGGER IF EXISTS faq_command_alias_insert_trigger ON faq_command_alias;
            CREATE TRIGGER faq_command_alias_insert_trigger BEFORE INSERT ON faq_command_alias FOR EACH ROW EXECUTE PROCEDURE insert_trigger_procedure();
        </sql>
    </changeSet>

</databaseChangeLog>